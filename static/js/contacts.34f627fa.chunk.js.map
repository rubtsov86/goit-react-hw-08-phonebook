{"version":3,"file":"static/js/contacts.34f627fa.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Phonebook/Phonebook.module.css?3a02","redux/contacts/contacts-selectors.js","components/Phonebook/Phonebook.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://react-homework-template/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","webpack://react-homework-template/./src/components/Modal/Modal.module.css?28d7","webpack://react-homework-template/./src/components/PatchForm/PatchForm.module.css?ef04","components/PatchForm/PatchForm.js","components/Modal/Modal.js","components/ContactList/ContactList.js","views/ContactsView.js","webpack://react-homework-template/./src/views/LoginView.module.css?dd24"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Phonebook_form__J23fu\",\"label\":\"Phonebook_label__Qzztg\",\"input\":\"Phonebook_input__8yiEQ\",\"title\":\"Phonebook_title__ipARL\"};","export const getFilter = state => state.contacts.filter;\nexport const getContacts = state => state.contacts.items;\n\nexport const getFilteredContacts = state =>\n  getContacts(state).filter(contact =>\n    contact.name.toLowerCase().includes(getFilter(state).toLowerCase())\n  );\nexport const getError = state => state.contacts.error;\nexport const getLoading = state => state.contacts.loading;\n","import { useState } from 'react';\nimport s from './Phonebook.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\nimport toast from 'react-hot-toast';\nimport { Circles } from 'react-loader-spinner';\nimport Button from '@mui/material/Button';\nimport SendIcon from '@mui/icons-material/Send';\n\nfunction Phonebook() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const loading = useSelector(contactsSelectors.getLoading);\n  const dispatch = useDispatch();\n\n  const handleInput = evt => {\n    switch (evt.currentTarget.name) {\n      case 'name':\n        setName(evt.currentTarget.value);\n        break;\n      case 'number':\n        setNumber(evt.currentTarget.value);\n        break;\n      default:\n        console.log('wrong name');\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    addContactToContacts(name, number);\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const addContactToContacts = (name, number) => {\n    const isNameInContacts = contacts\n      .map(({ name }) => name.toLowerCase())\n      .includes(name.toLowerCase());\n\n    if (isNameInContacts) {\n      toast.error(`${name} is already in contacts`, {\n        duration: 3000,\n        position: 'top-center',\n      });\n    } else {\n      dispatch(contactsOperations.addContact({ name, number }));\n      reset();\n    }\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <h2 className={s.title}>Add contact</h2>\n      <label className={s.label} htmlFor=\"nameAdd\">\n        Name\n      </label>\n      <input\n        type=\"text\"\n        onChange={handleInput}\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        className={s.input}\n        id=\"nameAdd\"\n      />\n\n      <label className={s.label} htmlFor=\"numberAdd\">\n        Number\n      </label>\n      <input\n        type=\"tel\"\n        onChange={handleInput}\n        name=\"number\"\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        className={s.input}\n        id=\"numberAdd\"\n      />\n\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        endIcon={\n          loading ? (\n            <Circles height=\"15\" width=\"15\" color=\"white\" ariaLabel=\"loading\" />\n          ) : (\n            <SendIcon />\n          )\n        }\n        size=\"large\"\n      >\n        Add contact\n      </Button>\n    </form>\n  );\n}\n\nexport default Phonebook;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\",\"title\":\"Filter_title__pSkfx\"};","import React from 'react';\nimport s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsActions, contactsSelectors } from 'redux/contacts';\n\nexport const Filter = () => {\n  const filter = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <h2 className={s.title}>Contacts List</h2>\n      <label className={s.label}>\n        Find Contacts by name\n        <input\n          type=\"text\"\n          onChange={evt =>\n            dispatch(contactsActions.setFilter(evt.currentTarget.value))\n          }\n          name=\"filter\"\n          value={filter}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          className={s.input}\n        />\n      </label>\n    </>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactListItem_item__UAAix\",\"name\":\"ContactListItem_name__cIBvF\",\"button\":\"ContactListItem_button__SG6H2\",\"contactContainer\":\"ContactListItem_contactContainer__0rcmw\"};","import React from 'react';\nimport s from './ContactListItem.module.css';\nimport PropTypes from 'prop-types';\nimport { contactsOperations } from 'redux/contacts';\nimport { useDispatch } from 'react-redux';\nimport { Circles } from 'react-loader-spinner';\nimport Button from '@mui/material/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Fab from '@mui/material/Fab';\nimport EditIcon from '@mui/icons-material/Edit';\n\nconst ContactListItem = ({ id, name, number, loader, handleShowModal }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <li className={s.item}>\n      <Fab\n        size=\"small\"\n        color=\"primary\"\n        aria-label=\"edit\"\n        className={s.fab}\n        onClick={handleShowModal}\n        id={id}\n      >\n        <EditIcon />\n      </Fab>\n      <div className={s.contactContainer}>\n        <span className={s.name}>{name}:</span>\n        <span className={s.number}>{number}</span>\n      </div>\n\n      <Button\n        className={s.button}\n        id={id}\n        name={name}\n        variant=\"outlined\"\n        startIcon={\n          loader ? (\n            <Circles height=\"20\" width=\"20\" color=\"blue\" ariaLabel=\"loading\" />\n          ) : (\n            <DeleteIcon />\n          )\n        }\n        onClick={evt => {\n          dispatch(\n            contactsOperations.deleteContact({\n              id: evt.currentTarget.id,\n              name: evt.currentTarget.name,\n            })\n          );\n        }}\n      >\n        Delete\n      </Button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  loader: PropTypes.bool.isRequired,\n};\n\nexport default ContactListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","// extracted by mini-css-extract-plugin\nexport default {\"Overlay\":\"Modal_Overlay__yoxbg\",\"Modal\":\"Modal_Modal__I1UYJ\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"PatchForm_form__V2ul1\",\"label\":\"PatchForm_label__MwJQE\",\"input\":\"PatchForm_input__JDiGI\",\"title\":\"PatchForm_title__yIMj6\",\"buttonContainer\":\"PatchForm_buttonContainer__daJTf\"};","import { useState } from 'react';\nimport s from './PatchForm.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\nimport toast from 'react-hot-toast';\nimport { Circles } from 'react-loader-spinner';\nimport Button from '@mui/material/Button';\nimport EditIcon from '@mui/icons-material/Edit';\n\nfunction PatchForm({ onClick, showModal }) {\n  const contacts = useSelector(contactsSelectors.getContacts);\n\n  const [name, setName] = useState(\n    contacts.find(contact => contact.id === showModal).name\n  );\n  const [number, setNumber] = useState(\n    contacts.find(contact => contact.id === showModal).number\n  );\n\n  const loading = useSelector(contactsSelectors.getLoading);\n  const dispatch = useDispatch();\n\n  const handleInput = evt => {\n    switch (evt.currentTarget.name) {\n      case 'name':\n        setName(evt.currentTarget.value);\n        break;\n      case 'number':\n        setNumber(evt.currentTarget.value);\n        break;\n      default:\n        console.log('wrong name');\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    addContactToContacts(name, number);\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const addContactToContacts = (name, number) => {\n    const isNameInContacts = contacts\n      .map(({ name }) => name.toLowerCase())\n      .includes(name.toLowerCase());\n\n    if (isNameInContacts) {\n      toast.error(`${name} is already in contacts`, {\n        duration: 3000,\n        position: 'top-center',\n      });\n    } else {\n      dispatch(contactsOperations.addContact({ name, number }));\n      reset();\n    }\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <h2 className={s.title}>Edit contact</h2>\n      <label className={s.label} htmlFor=\"nameAdd\">\n        Name\n      </label>\n      <input\n        type=\"text\"\n        onChange={handleInput}\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        className={s.input}\n        id=\"nameAdd\"\n      />\n\n      <label className={s.label} htmlFor=\"numberAdd\">\n        Number\n      </label>\n      <input\n        type=\"tel\"\n        onChange={handleInput}\n        name=\"number\"\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        className={s.input}\n        id=\"numberAdd\"\n      />\n\n      <div className={s.buttonContainer}>\n        <Button\n          type=\"button\"\n          variant=\"contained\"\n          size=\"large\"\n          onClick={onClick}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          endIcon={\n            loading ? (\n              <Circles\n                height=\"15\"\n                width=\"15\"\n                color=\"white\"\n                ariaLabel=\"loading\"\n              />\n            ) : (\n              <EditIcon />\n            )\n          }\n          size=\"large\"\n        >\n          Edit\n        </Button>\n      </div>\n    </form>\n  );\n}\n\nexport default PatchForm;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\nimport { createPortal } from 'react-dom';\nimport PatchForm from 'components/PatchForm';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nfunction Modal({ onClick, showModal }) {\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeydown);\n    return function clean() {\n      document.removeEventListener('keydown', handleKeydown);\n    };\n  });\n\n  const handleKeydown = e => {\n    console.log(e.code);\n    if (e.code === 'Escape') {\n      onClick();\n    }\n  };\n\n  const handleOverlay = e => {\n    if (e.currentTarget === e.target) {\n      onClick();\n    }\n  };\n\n  return createPortal(\n    <div className={s.Overlay} onClick={handleOverlay}>\n      <div className={s.Modal}>\n        <PatchForm onClick={onClick} showModal={showModal} />\n      </div>\n    </div>,\n    modalRoot\n  );\n}\n\nexport default Modal;\n\nModal.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import ContactListItem from '../ContactListItem';\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\nimport { useEffect } from 'react';\nimport s from './ContactList.module.css';\nimport Modal from 'components/Modal';\n\nconst ContactList = () => {\n  const [showModal, setShowModal] = useState(false);\n\n  const handleHideModal = e => {\n    setShowModal(false);\n  };\n\n  const handleShowModal = e => {\n    setShowModal(e.currentTarget.id);\n  };\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n  const allContacts = useSelector(contactsSelectors.getContacts);\n  const filteredContacts = useSelector(contactsSelectors.getFilteredContacts);\n  const loading = useSelector(contactsSelectors.getLoading);\n\n  if (filteredContacts.length === 0 && allContacts.length !== 0) {\n    return <p>Don't find any contact, try something else</p>;\n  }\n  return (\n    <>\n      <ul className={s.list}>\n        {filteredContacts.map(({ name, number, id }) => (\n          <ContactListItem\n            key={id}\n            id={id}\n            name={name}\n            number={number}\n            loader={loading?.id === id}\n            handleShowModal={handleShowModal}\n          />\n        ))}\n      </ul>\n      {showModal && <Modal onClick={handleHideModal} showModal={showModal} />}\n    </>\n  );\n};\n\nexport default ContactList;\n","import Phonebook from '../components/Phonebook';\nimport Filter from '../components/Filter';\nimport ContactList from '../components/ContactList';\nimport { useSelector } from 'react-redux';\nimport { contactsSelectors } from 'redux/contacts';\nimport s from './LoginView.module.css';\n\nconst ContactsView = () => {\n  const error = useSelector(contactsSelectors.getError);\n  return (\n    <div className={s.container}>\n      <Phonebook />\n      <div>\n        <Filter />\n        {error ? <h2>{error}, please try latter</h2> : <ContactList />}\n      </div>\n    </div>\n  );\n};\n\nexport default ContactsView;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"LoginView_title__n-sEC\",\"form\":\"LoginView_form__XLqLJ\",\"label\":\"LoginView_label__a9+XD\",\"input\":\"LoginView_input__SMhve\",\"container\":\"LoginView_container__n8dcz\"};"],"names":["getFilter","state","contacts","filter","getContacts","items","getFilteredContacts","contact","name","toLowerCase","includes","getError","error","getLoading","loading","useState","setName","number","setNumber","useSelector","contactsSelectors","dispatch","useDispatch","handleInput","evt","currentTarget","value","console","log","addContactToContacts","map","toast","duration","position","contactsOperations","className","s","onSubmit","preventDefault","htmlFor","type","onChange","pattern","title","required","id","Button","variant","endIcon","height","width","color","ariaLabel","Send","size","contactsActions","loader","handleShowModal","Fab","onClick","Edit","startIcon","Delete","showModal","find","modalRoot","document","querySelector","useEffect","addEventListener","handleKeydown","removeEventListener","e","code","createPortal","target","setShowModal","allContacts","filteredContacts","length"],"sourceRoot":""}